{"version":3,"file":"dropzone.component.js","sourceRoot":"","sources":["../../src/lib/dropzone.component.ts"],"names":[],"mappings":";;;;AAAA,OAAO,EAAE,SAAS,EAAE,iBAAiB,EACnC,KAAK,EAAE,MAAM,EAAE,SAAS,EAAE,YAAY,EAAE,MAAM,eAAe,CAAC;AAEhE,OAAO,EAAE,iBAAiB,EAAE,MAAM,sBAAsB,CAAC;;IAqDvD;wBA1C6B,KAAK;uBAIP,+BAA+B;2BAC3B,EAAE;gCAEI,IAAI;wBAIuB,IAAI,YAAY,EAAO;0BACvB,IAAI,YAAY,EAAO;0BACvB,IAAI,YAAY,EAAO;2BACvB,IAAI,YAAY,EAAO;2BACvB,IAAI,YAAY,EAAO;6BACvB,IAAI,YAAY,EAAO;uBAEvB,IAAI,YAAY,EAAO;4BACvB,IAAI,YAAY,EAAO;0BACvB,IAAI,YAAY,EAAO;4BACvB,IAAI,YAAY,EAAO;2BACvB,IAAI,YAAY,EAAO;4BACvB,IAAI,YAAY,EAAO;4BAEvB,IAAI,YAAY,EAAO;4BACvB,IAAI,YAAY,EAAO;8BACvB,IAAI,YAAY,EAAO;iCACvB,IAAI,YAAY,EAAO;kCACvB,IAAI,YAAY,EAAO;mCACvB,IAAI,YAAY,EAAO;kCAEvB,IAAI,YAAY,EAAO;kCACvB,IAAI,YAAY,EAAO;mCACvB,IAAI,YAAY,EAAO;mCACvB,IAAI,YAAY,EAAO;qCACvB,IAAI,YAAY,EAAO;wBAEvB,IAAI,YAAY,EAAO;gCACvB,IAAI,YAAY,EAAO;sCACvB,IAAI,YAAY,EAAO;KAEvE;;;;IAET,0CAAc;;;;QACnB,MAAM,CAAC,MAAM,GAAG,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,GAAG,CAAC;;;gBArDrD,SAAS,SAAC;oBACT,QAAQ,EAAE,UAAU;oBACpB,QAAQ,EAAE,aAAa;oBACvB,WAAW,EAAE,+BAA+B;oBAC5C,SAAS,EAAE,CAAE,8BAA8B,CAAE;oBAC7C,aAAa,EAAE,iBAAiB,CAAC,IAAI;iBACtC;;;;;6BAEE,KAAK;2BAEL,KAAK;4BAEL,KAAK;gCACL,KAAK;qCAEL,KAAK;iCAEL,SAAS,SAAC,iBAAiB;6BAE3B,MAAM,SAAC,OAAO;+BACd,MAAM,SAAC,SAAS;+BAChB,MAAM,SAAC,SAAS;gCAChB,MAAM,SAAC,UAAU;gCACjB,MAAM,SAAC,UAAU;kCACjB,MAAM,SAAC,YAAY;4BAEnB,MAAM,SAAC,MAAM;iCACb,MAAM,SAAC,WAAW;+BAClB,MAAM,SAAC,SAAS;iCAChB,MAAM,SAAC,WAAW;gCAClB,MAAM,SAAC,UAAU;iCACjB,MAAM,SAAC,WAAW;iCAElB,MAAM,SAAC,WAAW;iCAClB,MAAM,SAAC,WAAW;mCAClB,MAAM,SAAC,aAAa;sCACpB,MAAM,SAAC,gBAAgB;uCACvB,MAAM,SAAC,iBAAiB;wCACxB,MAAM,SAAC,kBAAkB;uCAEzB,MAAM,SAAC,iBAAiB;uCACxB,MAAM,SAAC,iBAAiB;wCACxB,MAAM,SAAC,kBAAkB;wCACzB,MAAM,SAAC,kBAAkB;0CACzB,MAAM,SAAC,oBAAoB;6BAE3B,MAAM,SAAC,OAAO;qCACd,MAAM,SAAC,eAAe;2CACtB,MAAM,SAAC,qBAAqB;;4BAtD/B;;SAaa,iBAAiB","sourcesContent":["import { Component, ViewEncapsulation,\n  Input, Output, ViewChild, EventEmitter } from '@angular/core';\n\nimport { DropzoneDirective } from './dropzone.directive';\nimport { DropzoneConfigInterface } from './dropzone.interfaces';\n\n@Component({\n  selector: 'dropzone',\n  exportAs: 'ngxDropzone',\n  templateUrl: './lib/dropzone.component.html',\n  styleUrls: [ './lib/dropzone.component.css' ],\n  encapsulation: ViewEncapsulation.None\n})\nexport class DropzoneComponent {\n  @Input() disabled: boolean = false;\n\n  @Input() config: DropzoneConfigInterface;\n\n  @Input() message: string = 'Click or drag files to upload';\n  @Input() placeholder: string = '';\n\n  @Input() useDropzoneClass: boolean = true;\n\n  @ViewChild(DropzoneDirective) directiveRef: DropzoneDirective;\n\n  @Output('error'                 ) DZ_ERROR                    = new EventEmitter<any>();\n  @Output('success'               ) DZ_SUCCESS                  = new EventEmitter<any>();\n  @Output('sending'               ) DZ_SENDING                  = new EventEmitter<any>();\n  @Output('canceled'              ) DZ_CANCELED                 = new EventEmitter<any>();\n  @Output('complete'              ) DZ_COMPLETE                 = new EventEmitter<any>();\n  @Output('processing'            ) DZ_PROCESSING               = new EventEmitter<any>();\n\n  @Output('drop'                  ) DZ_DROP                     = new EventEmitter<any>();\n  @Output('dragStart'             ) DZ_DRAGSTART                = new EventEmitter<any>();\n  @Output('dragEnd'               ) DZ_DRAGEND                  = new EventEmitter<any>();\n  @Output('dragEnter'             ) DZ_DRAGENTER                = new EventEmitter<any>();\n  @Output('dragOver'              ) DZ_DRAGOVER                 = new EventEmitter<any>();\n  @Output('dragLeave'             ) DZ_DRAGLEAVE                = new EventEmitter<any>();\n\n  @Output('thumbnail'             ) DZ_THUMBNAIL                = new EventEmitter<any>();\n  @Output('addedFile'             ) DZ_ADDEDFILE                = new EventEmitter<any>();\n  @Output('removedFile'           ) DZ_REMOVEDFILE              = new EventEmitter<any>();\n  @Output('uploadProgress'        ) DZ_UPLOADPROGRESS           = new EventEmitter<any>();\n  @Output('maxFilesReached'       ) DZ_MAXFILESREACHED          = new EventEmitter<any>();\n  @Output('maxFilesExceeded'      ) DZ_MAXFILESEXCEEDED         = new EventEmitter<any>();\n\n  @Output('successMultiple'       ) DZ_SUCCESSMULTIPLE          = new EventEmitter<any>();\n  @Output('sendingMultiple'       ) DZ_SENDINGMULTIPLE          = new EventEmitter<any>();\n  @Output('canceledMultiple'      ) DZ_CANCELEDMULTIPLE         = new EventEmitter<any>();\n  @Output('completeMultiple'      ) DZ_COMPLETEMULTIPLE         = new EventEmitter<any>();\n  @Output('processingMultiple'    ) DZ_PROCESSINGMULTIPLE       = new EventEmitter<any>();\n\n  @Output('reset'                 ) DZ_RESET                    = new EventEmitter<any>();\n  @Output('queueComplete'         ) DZ_QUEUECOMPLETE            = new EventEmitter<any>();\n  @Output('totalUploadProgress'   ) DZ_TOTALUPLOADPROGRESS      = new EventEmitter<any>();\n\n  constructor() {}\n\n  public getPlaceholder() {\n    return 'url(' + encodeURI(this.placeholder) + ')';\n  }\n}\n"]}