{
  "version": 3,
  "file": "ngx-share-core.js",
  "sources": [
    "ng://@ngx-share/core/out/share.module.ts",
    "ng://@ngx-share/core/out/share-count.pipe.ts",
    "ng://@ngx-share/core/out/share-button.directive.ts",
    "ng://@ngx-share/core/out/share.service.ts",
    "ng://@ngx-share/core/out/share.prop.ts",
    "ng://@ngx-share/core/out/share.operators.ts",
    "ng://@ngx-share/core/out/utils.ts",
    "ng://@ngx-share/core/out/share.tokens.ts"
  ],
  "sourcesContent": [
    "import { NgModule, InjectionToken } from '@angular/core';\r\n\r\nimport { ShareButtons } from './share.service';\r\nimport { ShareButtonDirective } from './share-button.directive';\r\nimport { ShareCountPipe } from './share-count.pipe';\r\nimport { ShareButtonsConfig } from './share.models';\r\nimport { CONFIG } from './share.tokens';\r\n\r\nexport function ShareButtonsFactory(config: ShareButtonsConfig) {\r\n  return new ShareButtons(config);\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ShareButtonDirective,\r\n    ShareCountPipe\r\n  ],\r\n  exports: [\r\n    ShareButtonDirective,\r\n    ShareCountPipe\r\n  ]\r\n})\r\nexport class ShareModule {\r\n  static forRoot(config?: ShareButtonsConfig) {\r\n    return {\r\n      ngModule: ShareModule,\r\n      providers: [\r\n        {provide: CONFIG, useValue: config},\r\n        {\r\n          provide: ShareButtons,\r\n          useFactory: ShareButtonsFactory,\r\n          deps: [CONFIG]\r\n        }\r\n      ]\r\n    };\r\n  }\r\n}\r\n",
    "import { Pipe, PipeTransform } from '@angular/core';\r\nimport { shareCountFormatter } from './utils';\r\n\r\n@Pipe({\r\n  name: 'shareCount'\r\n})\r\nexport class ShareCountPipe implements PipeTransform {\r\n  transform(num: number, digits?: number) {\r\n    return shareCountFormatter(num, digits);\r\n  }\r\n}\r\n",
    "import {\r\n  Directive,\r\n  Input,\r\n  Output,\r\n  HostListener,\r\n  EventEmitter,\r\n  ElementRef,\r\n  Renderer2,\r\n  ChangeDetectorRef,\r\n  PLATFORM_ID,\r\n  Inject,\r\n  OnChanges,\r\n  SimpleChanges\r\n} from '@angular/core';\r\nimport { isPlatformBrowser } from '@angular/common';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { catchError } from 'rxjs/operators/catchError';\r\nimport { take } from 'rxjs/operators/take';\r\nimport { map } from 'rxjs/operators/map';\r\nimport { switchMap } from 'rxjs/operators/switchMap';\r\nimport { tap } from 'rxjs/operators/tap';\r\nimport { filter } from 'rxjs/operators/filter';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { empty } from 'rxjs/observable/empty';\r\nimport { of } from 'rxjs/observable/of';\r\n\r\nimport { ShareButtons } from './share.service';\r\nimport { IShareButton, ShareButtonRef } from './share.models';\r\nimport { getMetaContent, getOS, getValidUrl } from './utils';\r\n\r\n/** Google analytics ref */\r\ndeclare const ga: Function;\r\n\r\n@Directive({\r\n  selector: '[shareButton]'\r\n})\r\nexport class ShareButtonDirective implements OnChanges {\r\n\r\n  /** Button properties */\r\n  prop: IShareButton;\r\n\r\n  /** A ref to button class - used to remove previous class when the button type is changed */\r\n  buttonClass: string;\r\n\r\n  /** Share button type */\r\n  @Input() shareButton: string;\r\n\r\n  /** Get share count */\r\n  @Input() getCount = false;\r\n\r\n  /** Set meta tags from document head, useful when SEO is supported */\r\n  @Input() autoSetMeta: boolean = this.shareService.autoSetMeta;\r\n\r\n  /** Meta tags inputs - initialized from the global options */\r\n  @Input() url: string = this.shareService.url;\r\n  @Input() title: string = this.shareService.title;\r\n  @Input() description: string = this.shareService.description;\r\n  @Input() image: string = this.shareService.image;\r\n  @Input() tags: string = this.shareService.tags;\r\n\r\n  /** Stream that emits when share count is fetched */\r\n  @Output() count = new EventEmitter<number>();\r\n\r\n  /** Stream that emits when share dialog is opened */\r\n  @Output() opened = new EventEmitter<string>();\r\n\r\n  /** Stream that emits when share dialog is closed */\r\n  @Output() closed = new EventEmitter<string>();\r\n\r\n  constructor(private shareService: ShareButtons,\r\n              private http: HttpClient,\r\n              public renderer: Renderer2,\r\n              public cd: ChangeDetectorRef,\r\n              private el: ElementRef,\r\n              @Inject(PLATFORM_ID) private platform: Object) {\r\n  }\r\n\r\n  /** Share link on element click */\r\n  @HostListener('click')\r\n  onClick() {\r\n    if (isPlatformBrowser(this.platform)) {\r\n      const metaTags = this.autoSetMeta ? {\r\n        url: this.url,\r\n        title: this.title || getMetaContent('og:title'),\r\n        description: this.description || getMetaContent('og:description'),\r\n        image: this.image || getMetaContent('og:image'),\r\n        via: this.shareService.twitterAccount || getMetaContent('twitter:site'),\r\n        tags: this.tags,\r\n      } : {\r\n        url: this.url,\r\n        title: this.title,\r\n        description: this.description,\r\n        image: this.image,\r\n        tags: this.tags,\r\n        via: this.shareService.twitterAccount,\r\n      };\r\n\r\n      const ref: ShareButtonRef = {\r\n        cd: this.cd,\r\n        renderer: this.renderer,\r\n        prop: this.prop,\r\n        el: this.el.nativeElement,\r\n        os: getOS(),\r\n        metaTags\r\n      };\r\n\r\n      // Share the link\r\n      of(ref).pipe(\r\n        ...this.prop.share.operators,\r\n        tap((sharerURL: string) => this.share(sharerURL)),\r\n        take(1)\r\n      ).subscribe();\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (isPlatformBrowser(this.platform)) {\r\n\r\n      if (changes['shareButton'] && (changes['shareButton'].firstChange || changes['shareButton'].previousValue !== this.shareButton)) {\r\n        this.createShareButton(this.shareButton);\r\n      }\r\n\r\n      if (!this.url || (changes['url'] && changes['url'].previousValue !== this.url)) {\r\n        of(null).pipe(\r\n          map(() => {\r\n            this.url = getValidUrl(this.autoSetMeta ? this.url || getMetaContent('og:url') : this.url, window.location.href);\r\n            return this.url;\r\n          }),\r\n          filter(() => this.prop.count && this.getCount),\r\n          switchMap((url: string) => this.shareCount(url)),\r\n          tap((shareCount: number) => this.count.emit(shareCount)),\r\n          take(1)\r\n        ).subscribe();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Open sharing dialog\r\n   * @param url - Share URL\r\n   */\r\n  share(url: string) {\r\n    if (url) {\r\n\r\n      // GA Tracking\r\n      if (this.shareService.gaTracking && typeof ga !== 'undefined') {\r\n        ga('send', 'social', this.prop.type, 'click', this.url);\r\n      }\r\n\r\n      // Emit when share dialog is opened\r\n      this.opened.emit(this.prop.type);\r\n\r\n      const popUp = window.open(url, 'newwindow', this.shareService.windowSize);\r\n\r\n      // Emit when share dialog is closed\r\n      if (popUp) {\r\n        const pollTimer = window.setInterval(() => {\r\n          if (popUp.closed) {\r\n            window.clearInterval(pollTimer);\r\n            this.closed.emit(this.prop.type);\r\n          }\r\n        }, 200);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get link share count\r\n   * @param url - Share URL\r\n   * @returns Share count\r\n   */\r\n  shareCount(url: string): Observable<any> {\r\n\r\n    if (this.prop.count.request === 'jsonp') {\r\n\r\n      return this.http.jsonp<any>(this.prop.count.url + url, 'callback').pipe(\r\n        ...this.prop.count.operators,\r\n        catchError(() => empty()),\r\n      );\r\n    } else {\r\n\r\n      return this.http.get<any>(this.prop.count.url + url, this.prop.count.args).pipe(\r\n        ...this.prop.count.operators,\r\n        catchError(() => empty())\r\n      );\r\n    }\r\n  }\r\n\r\n\r\n  private createShareButton(buttonsName: string) {\r\n\r\n    const button = {...this.shareService.prop[buttonsName]};\r\n\r\n    if (button) {\r\n      // Set share button properties\r\n      this.prop = button;\r\n\r\n      // Remove previous button class\r\n      this.renderer.removeClass(this.el.nativeElement, `sb-${this.buttonClass}`);\r\n\r\n      // Add new button class\r\n      this.renderer.addClass(this.el.nativeElement, `sb-${button.type}`);\r\n\r\n      // Set button css color variable\r\n      this.el.nativeElement.style.setProperty('--button-color', this.prop.color);\r\n\r\n      // Keep a copy of the class for future replacement\r\n      this.buttonClass = button.type;\r\n    } else {\r\n      throw new Error(`[ShareButtons]: The share button '${buttonsName}' does not exist!`);\r\n    }\r\n  }\r\n\r\n}\r\n",
    "import { Inject, Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\r\nimport { IShareButton, IShareButtons, ShareButtonsConfig } from './share.models';\r\nimport { CONFIG } from './share.tokens';\r\nimport { shareButtonsProp } from './share.prop';\r\nimport { mergeDeep } from './utils';\r\n\r\n@Injectable()\r\nexport class ShareButtons {\r\n\r\n  config: ShareButtonsConfig = {\r\n    prop: shareButtonsProp,\r\n    options: {\r\n      theme: 'default',\r\n      include: [],\r\n      exclude: [],\r\n      size: 0,\r\n      url: undefined,\r\n      title: undefined,\r\n      description: undefined,\r\n      image: undefined,\r\n      tags: undefined,\r\n      twitterAccount: undefined,\r\n      autoSetMeta: true,\r\n      gaTracking: false,\r\n      windowWidth: 800,\r\n      windowHeight: 500\r\n    }\r\n  };\r\n  config$ = new BehaviorSubject(this.config);\r\n\r\n  constructor(@Inject(CONFIG) config: ShareButtonsConfig) {\r\n    if (config) {\r\n      this.setConfig(config);\r\n    }\r\n  }\r\n\r\n  get prop() {\r\n    return this.config.prop;\r\n  }\r\n\r\n  get twitterAccount() {\r\n    return this.config.options.twitterAccount;\r\n  }\r\n\r\n  get theme() {\r\n    return this.config.options.theme;\r\n  }\r\n\r\n  get windowSize() {\r\n    return `width=${this.config.options.windowWidth}, height=${this.config.options.windowHeight}`;\r\n  }\r\n\r\n  get url() {\r\n    return this.config.options.url;\r\n  }\r\n\r\n  get title() {\r\n    return this.config.options.title;\r\n  }\r\n\r\n  get description() {\r\n    return this.config.options.description;\r\n  }\r\n\r\n  get image() {\r\n    return this.config.options.image;\r\n  }\r\n\r\n  get tags() {\r\n    return this.config.options.tags;\r\n  }\r\n\r\n  get autoSetMeta() {\r\n    return this.config.options.autoSetMeta;\r\n  }\r\n\r\n  get gaTracking() {\r\n    return this.config.options.gaTracking;\r\n  }\r\n\r\n  get size() {\r\n    return this.config.options.size;\r\n  }\r\n\r\n  setConfig(config: ShareButtonsConfig) {\r\n    this.config = mergeDeep(this.config, config);\r\n    this.config$.next(this.config);\r\n  }\r\n\r\n  addButton(name: string, data: IShareButton) {\r\n    const config = {\r\n      prop: {...shareButtonsProp, ...{[name]: data}}\r\n    };\r\n    this.setConfig(config);\r\n  }\r\n}\r\n",
    "import {\r\n  metaTagsOperators,\r\n  printOperators,\r\n  copyOperators,\r\n  urlInMessageOperators,\r\n  FacebookCountOperators,\r\n  PinterestCountOperators,\r\n  TumblrCountOperators,\r\n  RedditCountOperators\r\n} from './share.operators';\r\nimport { IShareButtons } from './share.models';\r\nimport {\r\n  faFacebookF,\r\n  faTwitter,\r\n  faLinkedinIn,\r\n  faGooglePlusG,\r\n  faPinterestP,\r\n  faRedditAlien,\r\n  faTumblr,\r\n  faWhatsapp,\r\n  faFacebookMessenger,\r\n  faTelegramPlane,\r\n  faVk,\r\n  faStumbleupon,\r\n  faXing\r\n} from '@fortawesome/free-brands-svg-icons';\r\n\r\nimport { faCommentAlt, faEnvelope, faCheck, faPrint, faExclamation, faLink } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport const shareButtonsProp: IShareButtons = {\r\n  facebook: {\r\n    type: 'facebook',\r\n    text: 'Facebook',\r\n    icon: faFacebookF,\r\n    color: '#4267B2',\r\n    share: {\r\n      desktop: 'https://www.facebook.com/sharer/sharer.php?',\r\n      android: 'https://www.facebook.com/sharer/sharer.php?',\r\n      ios: 'https://www.facebook.com/sharer/sharer.php?',\r\n      operators: metaTagsOperators,\r\n      metaTags: {\r\n        url: 'u'\r\n      }\r\n    },\r\n    count: {\r\n      request: 'http',\r\n      url: 'https://graph.facebook.com?id=',\r\n      operators: FacebookCountOperators\r\n    }\r\n  },\r\n  twitter: {\r\n    type: 'twitter',\r\n    text: 'Twitter',\r\n    icon: faTwitter,\r\n    color: '#00acee',\r\n    share: {\r\n      desktop: 'https://twitter.com/intent/tweet?',\r\n      android: 'https://twitter.com/intent/tweet?',\r\n      ios: 'https://twitter.com/intent/tweet?',\r\n      operators: metaTagsOperators,\r\n      metaTags: {\r\n        url: 'url',\r\n        description: 'text',\r\n        tags: 'hashtags',\r\n        via: 'via'\r\n      }\r\n    }\r\n  },\r\n  google: {\r\n    type: 'google',\r\n    text: 'Google+',\r\n    icon: faGooglePlusG,\r\n    color: '#DB4437',\r\n    share: {\r\n      desktop: 'https://plus.google.com/share?',\r\n      android: 'https://plus.google.com/share?',\r\n      ios: 'https://plus.google.com/share?',\r\n      metaTags: {\r\n        url: 'url',\r\n      },\r\n      operators: metaTagsOperators\r\n    }\r\n  },\r\n  linkedin: {\r\n    type: 'linkedin',\r\n    text: 'LinkedIn',\r\n    icon: faLinkedinIn,\r\n    color: '#006fa6',\r\n    share: {\r\n      desktop: 'http://www.linkedin.com/shareArticle?',\r\n      android: 'http://www.linkedin.com/shareArticle?',\r\n      ios: 'http://www.linkedin.com/shareArticle?',\r\n      operators: metaTagsOperators,\r\n      metaTags: {\r\n        url: 'url',\r\n        title: 'title',\r\n        description: 'summary'\r\n      },\r\n    }\r\n  },\r\n  pinterest: {\r\n    type: 'pinterest',\r\n    text: 'Pinterest',\r\n    icon: faPinterestP,\r\n    color: '#BD091D',\r\n    share: {\r\n      desktop: 'https://in.pinterest.com/pin/create/button/?',\r\n      android: 'https://in.pinterest.com/pin/create/button/?',\r\n      ios: 'https://in.pinterest.com/pin/create/button/?',\r\n      operators: metaTagsOperators,\r\n      metaTags: {\r\n        url: 'url',\r\n        description: 'description',\r\n        image: 'media'\r\n      }\r\n    },\r\n    count: {\r\n      request: 'http',\r\n      url: 'https://api.pinterest.com/v1/urls/count.json?url=',\r\n      args: {responseType: 'text'},\r\n      operators: PinterestCountOperators\r\n    }\r\n  },\r\n  reddit: {\r\n    type: 'reddit',\r\n    text: 'Reddit',\r\n    icon: faRedditAlien,\r\n    color: '#FF4006',\r\n    share: {\r\n      desktop: 'http://www.reddit.com/submit?',\r\n      android: 'http://www.reddit.com/submit?',\r\n      ios: 'http://www.reddit.com/submit?',\r\n      operators: metaTagsOperators,\r\n      metaTags: {\r\n        url: 'url',\r\n        title: 'title'\r\n      },\r\n    },\r\n    count: {\r\n      request: 'http',\r\n      url: 'https://buttons.reddit.com/button_info.json?url=',\r\n      operators: RedditCountOperators\r\n    },\r\n  },\r\n  tumblr: {\r\n    type: 'tumblr',\r\n    text: 'Tumblr',\r\n    icon: faTumblr,\r\n    color: '#36465D',\r\n    share: {\r\n      desktop: 'http://tumblr.com/widgets/share/tool?',\r\n      android: 'http://tumblr.com/widgets/share/tool?',\r\n      ios: 'http://tumblr.com/widgets/share/tool?',\r\n      operators: metaTagsOperators,\r\n      metaTags: {\r\n        url: 'canonicalUrl',\r\n        description: 'caption',\r\n        tags: 'tags'\r\n      }\r\n    },\r\n    count: {\r\n      request: 'jsonp',\r\n      url: 'https://api.tumblr.com/v2/share/stats?url=',\r\n      operators: TumblrCountOperators\r\n    }\r\n  },\r\n  whatsapp: {\r\n    type: 'whatsapp',\r\n    text: 'WhatsApp',\r\n    icon: faWhatsapp,\r\n    color: '#25D366',\r\n    share: {\r\n      desktop: 'https://web.whatsapp.com/send?',\r\n      android: 'whatsapp://send?',\r\n      ios: 'whatsapp://send?',\r\n      operators: [\r\n        ...urlInMessageOperators,\r\n        ...metaTagsOperators\r\n      ],\r\n      metaTags: {\r\n        description: 'text'\r\n      }\r\n    }\r\n  },\r\n  messenger: {\r\n    type: 'messenger',\r\n    text: 'Messenger',\r\n    icon: faFacebookMessenger,\r\n    color: '#0080FF',\r\n    share: {\r\n      android: 'fb-messenger://share/?',\r\n      ios: 'fb-messenger://share/?',\r\n      operators: metaTagsOperators,\r\n      metaTags: {\r\n        url: 'link'\r\n      }\r\n    }\r\n  },\r\n  telegram: {\r\n    type: 'telegram',\r\n    text: 'Telegram',\r\n    icon: faTelegramPlane,\r\n    color: '#0088cc',\r\n    share: {\r\n      desktop: 'https://t.me/share/url?',\r\n      android: 'https://t.me/share/url?',\r\n      ios: 'https://t.me/share/url?',\r\n      operators: metaTagsOperators,\r\n      metaTags: {\r\n        url: 'url',\r\n        description: 'text'\r\n      }\r\n    }\r\n  },\r\n  vk: {\r\n    type: 'vk',\r\n    text: 'VKontakte',\r\n    icon: faVk,\r\n    color: '#4C75A3',\r\n    share: {\r\n      desktop: 'http://vk.com/share.php?',\r\n      android: 'http://vk.com/share.php?',\r\n      ios: 'http://vk.com/share.php?',\r\n      operators: metaTagsOperators,\r\n      metaTags: {\r\n        url: 'url'\r\n      }\r\n    }\r\n  },\r\n  stumble: {\r\n    type: 'stumble',\r\n    text: 'Stumble',\r\n    icon: faStumbleupon,\r\n    color: '#eb4924',\r\n    share: {\r\n      desktop: 'http://www.stumbleupon.com/submit?',\r\n      android: 'http://www.stumbleupon.com/submit?',\r\n      ios: 'http://www.stumbleupon.com/submit?',\r\n      operators: metaTagsOperators,\r\n      metaTags: {\r\n        url: 'url'\r\n      }\r\n    }\r\n  },\r\n  xing: {\r\n    type: 'xing',\r\n    text: 'Xing',\r\n    icon: faXing,\r\n    color: '#006567',\r\n    share: {\r\n      desktop: 'https://www.xing.com/app/user?op=share&',\r\n      android: 'https://www.xing.com/app/user?op=share&',\r\n      ios: 'https://www.xing.com/app/user?op=share&',\r\n      operators: metaTagsOperators,\r\n      metaTags: {\r\n        url: 'url'\r\n      }\r\n    }\r\n  },\r\n  sms: {\r\n    type: 'sms',\r\n    text: 'SMS',\r\n    icon: faCommentAlt,\r\n    color: '#20c16c',\r\n    share: {\r\n      desktop: 'sms:?',\r\n      android: 'sms:?',\r\n      ios: 'sms:?',\r\n      metaTags: {\r\n        description: 'body'\r\n      },\r\n      operators: [\r\n        ...urlInMessageOperators,\r\n        ...metaTagsOperators\r\n      ]\r\n    }\r\n  },\r\n  email: {\r\n    type: 'email',\r\n    text: 'Email',\r\n    icon: faEnvelope,\r\n    color: '#FF961C',\r\n    share: {\r\n      desktop: 'mailto:?',\r\n      android: 'mailto:?',\r\n      ios: 'mailto:?',\r\n      operators: [\r\n        ...urlInMessageOperators,\r\n        ...metaTagsOperators\r\n      ],\r\n      metaTags: {\r\n        title: 'subject',\r\n        description: 'body'\r\n      }\r\n    }\r\n  },\r\n  copy: {\r\n    type: 'copy',\r\n    text: 'Copy link',\r\n    successText: 'Copied',\r\n    successIcon: faCheck,\r\n    failText: 'Error',\r\n    failIcon: faExclamation,\r\n    icon: faLink,\r\n    color: '#607D8B',\r\n    share: {\r\n      operators: copyOperators\r\n    }\r\n  },\r\n  print: {\r\n    type: 'print',\r\n    text: 'Print',\r\n    icon: faPrint,\r\n    color: '#765AA2',\r\n    share: {\r\n      operators: printOperators\r\n    }\r\n  }\r\n};\r\n",
    "import { Observable } from 'rxjs/Observable';\r\nimport { map } from 'rxjs/operators/map';\r\nimport { delay } from 'rxjs/operators/delay';\r\nimport { ShareButtonRef } from './share.models';\r\nimport { copyToClipboard, mergeDeep } from './utils';\r\n\r\n/**\r\n * Meta tags operator - Serialize meta tags into the sharer URL\r\n */\r\nexport const metaTagsOperators = [\r\n  map((ref: ShareButtonRef) => {\r\n\r\n    // Social network sharer URL */\r\n    const SharerURL = ref.prop.share[ref.os];\r\n    if (SharerURL) {\r\n\r\n      // object contains supported meta tags\r\n      const metaTags = ref.prop.share.metaTags;\r\n\r\n      // object contains meta tags values */\r\n      const metaTagsValues = ref.metaTags;\r\n\r\n      let link = '';\r\n      // Set each meta tag with user value\r\n      if (metaTags) {\r\n        link = Object.entries(metaTags).map(([key, metaTag]) =>\r\n          metaTagsValues[key] ? `${metaTag}=${encodeURIComponent(metaTagsValues[key])}` : ''\r\n        ).join('&');\r\n      }\r\n      return SharerURL + link;\r\n    }\r\n    return;\r\n  })\r\n];\r\n\r\n/**\r\n * Print button operator\r\n */\r\nexport const printOperators = [\r\n  map(() => window.print())\r\n];\r\n\r\n/**\r\n * Copy link to clipboard, used for copy button\r\n */\r\nexport const copyOperators = [\r\n  map((ref: ShareButtonRef) => {\r\n\r\n    // Disable the button\r\n    ref.renderer.setStyle(ref.el, 'pointer-events', 'none');\r\n\r\n    ref.temp = {text: ref.prop.text, icon: ref.prop.icon};\r\n    const link = decodeURIComponent(ref.metaTags.url);\r\n\r\n    copyToClipboard(link, ref.os === 'ios')\r\n      .then(() => {\r\n        ref.prop.text = ref.prop.successText;\r\n        ref.prop.icon = ref.prop.successIcon;\r\n      })\r\n      .catch(() => {\r\n        ref.prop.text = ref.prop.failText;\r\n        ref.prop.icon = ref.prop.failIcon;\r\n      })\r\n      .then(() => ref.cd.markForCheck());\r\n    return ref;\r\n  }),\r\n  delay(2000),\r\n  map((ref: ShareButtonRef) => {\r\n\r\n    // Enable the button\r\n    ref.renderer.setStyle(ref.el, 'pointer-events', 'auto');\r\n\r\n    // Reset copy button text and icon */\r\n    ref.prop.text = ref.temp.text;\r\n    ref.prop.icon = ref.temp.icon;\r\n    ref.cd.markForCheck();\r\n  })\r\n];\r\n\r\n/**\r\n * Add the share URL to message body, used for WhatsApp and Email buttons\r\n */\r\nexport const urlInMessageOperators = [\r\n  map((ref: ShareButtonRef) => {\r\n    const description = ref.metaTags.description;\r\n    const url = ref.metaTags.url;\r\n    const newRef: ShareButtonRef = {\r\n      metaTags: {\r\n        description: description ? `${description}\\r\\n${url}` : url\r\n      }\r\n    };\r\n    return mergeDeep(ref, newRef);\r\n  })\r\n];\r\n\r\nexport const FacebookCountOperators = [\r\n  map((res: any) => +res.share.share_count)\r\n];\r\n\r\nexport const PinterestCountOperators = [\r\n  map((text: string) => JSON.parse(text.replace(/^receiveCount\\((.*)\\)/, '$1'))),\r\n  map((res: any) => +res.count)\r\n];\r\n\r\nexport const TumblrCountOperators = [\r\n  map((res: any) => +res.response.note_count)\r\n];\r\n\r\nexport const RedditCountOperators = [\r\n  map((res: any) => +res.data.children[0].data.score)\r\n];\r\n",
    "/** Simple object check.*/\r\nfunction isObject(item): boolean {\r\n  return (item && typeof item === 'object' && !Array.isArray(item));\r\n}\r\n\r\n/** Deep merge two objects.*/\r\nexport function mergeDeep(target, ...sources) {\r\n  if (!sources.length) {\r\n    return target;\r\n  }\r\n  const source = sources.shift();\r\n\r\n  if (isObject(target) && isObject(source)) {\r\n    for (const key in source) {\r\n      if (isObject(source[key])) {\r\n        if (!target[key]) {\r\n          Object.assign(target, {[key]: {}});\r\n        }\r\n        mergeDeep(target[key], source[key]);\r\n      } else {\r\n        Object.assign(target, {[key]: source[key]});\r\n      }\r\n    }\r\n  }\r\n\r\n  return mergeDeep(target, ...sources);\r\n}\r\n\r\n/** Returns a readable number from share count */\r\nexport function shareCountFormatter(num: number, digits: number): string {\r\n\r\n  const si = [\r\n    {value: 1E9, symbol: 'B'},\r\n    {value: 1E6, symbol: 'M'},\r\n    {value: 1E3, symbol: 'K'}\r\n  ], rx = /\\.0+$|(\\.[0-9]*[1-9])0+$/;\r\n\r\n  for (let i = 0; i < si.length; i++) {\r\n    if (num >= si[i].value) {\r\n      return (num / si[i].value).toFixed(digits).replace(rx, '$1') + si[i].symbol;\r\n    }\r\n  }\r\n  return num.toFixed(digits).replace(rx, '$1');\r\n}\r\n\r\n/** Copy text to clipboard */\r\nexport function copyToClipboard(text: string, ios: boolean) {\r\n  return new Promise((resolve) => {\r\n\r\n    // Create a hidden textarea element\r\n    const textArea = document.createElement('textarea');\r\n    textArea.value = text;\r\n    document.body.appendChild(textArea);\r\n\r\n    // highlight textarea to copy the text\r\n    if (ios) {\r\n      const range = document.createRange();\r\n      range.selectNodeContents(textArea);\r\n      const selection = window.getSelection();\r\n      selection.removeAllRanges();\r\n      selection.addRange(range);\r\n      textArea.readOnly = true;\r\n      textArea.setSelectionRange(0, 999999);\r\n    } else {\r\n      textArea.select();\r\n    }\r\n    document.execCommand('copy');\r\n    document.body.removeChild(textArea);\r\n    resolve();\r\n  });\r\n}\r\n\r\n/** Get meta tag content */\r\nexport function getMetaContent(key: string) {\r\n  const metaTag: Element = document.querySelector(`meta[property=\"${key}\"]`);\r\n  return metaTag ? metaTag.getAttribute('content') : undefined;\r\n}\r\n\r\n/** Detect operating system 'ios', 'android', or 'desktop' */\r\nexport function getOS() {\r\n  const userAgent = navigator.userAgent || navigator.vendor || (<any>window).opera;\r\n\r\n  if (/android/i.test(userAgent)) {\r\n    return 'android';\r\n  }\r\n\r\n  if (/iPad|iPhone|iPod/.test(userAgent) && !(<any>window).MSStream) {\r\n    return 'ios';\r\n  }\r\n  return 'desktop';\r\n}\r\n\r\n\r\n/** Returns a valid URL or falls back to current URL */\r\nexport function getValidUrl(url: string, fallbackUrl: string) {\r\n\r\n  if (url) {\r\n    const r = /(http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/;\r\n    if (r.test(url)) {\r\n      return url;\r\n    }\r\n    console.warn(`[ShareButtons]: Sharing link '${url}' is invalid!`);\r\n  }\r\n  return fallbackUrl;\r\n}\r\n",
    "import { InjectionToken } from '@angular/core';\r\nimport { ShareButtonsConfig } from './share.models';\r\n\r\nexport const CONFIG = new InjectionToken<ShareButtonsConfig>('CONFIG');\r\n"
  ],
  "names": [],
  "mappings": "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"
}
