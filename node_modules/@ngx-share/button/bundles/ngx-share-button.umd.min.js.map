{
  "version": 3,
  "file": "ngx-share-button.umd.min.js",
  "sources": [
    "ng://@ngx-share/button/out/share-button.component.ts",
    "ng://@ngx-share/button/out/share-button.module.ts"
  ],
  "sourcesContent": [
    "import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ChangeDetectionStrategy,\r\n  ViewChild,\r\n  HostBinding\r\n} from '@angular/core';\r\n\r\nimport { ShareButtons, ShareButtonDirective } from '@ngx-share/core';\r\nimport { IconProp } from '@fortawesome/fontawesome-svg-core';\r\n\r\n@Component({\r\n  selector: 'share-button',\r\n  template: `<button class=\"sb-wrapper\"\r\n        [shareButton]=\"button\"\r\n        [url]=\"url\"\r\n        [image]=\"image\"\r\n        [title]=\"title\"\r\n        [description]=\"description\"\r\n        [tags]=\"tags\"\r\n        [autoSetMeta]=\"autoSetMeta\"\r\n        [getCount]=\"showCount\"\r\n        (opened)=\"opened.emit($event)\"\r\n        (closed)=\"closed.emit($event)\"\r\n        (count)=\"onCount($event)\"\r\n        [class.sb-show-icon]=\"showIcon\"\r\n        [class.sb-show-text]=\"showText\"\r\n        [class.sb-show-count]=\"showCount && shareCount\"\r\n        [style.fontSize.px]=\"(1 + size/20) * 14\">\r\n\r\n  <div class=\"sb-inner\">\r\n\r\n    <div class=\"sb-content\">\r\n\r\n      <!-- BUTTON ICON -->\r\n      <div *ngIf=\"showIcon && ref.prop\" class=\"sb-icon\">\r\n        <fa-icon [icon]=\"icon || ref.prop.icon\"></fa-icon>\r\n      </div>\r\n\r\n      <!-- BUTTON TEXT -->\r\n      <div *ngIf=\"showText && ref.prop\" class=\"sb-text\">\r\n        {{ text || ref.prop.text }}\r\n      </div>\r\n\r\n    </div>\r\n\r\n    <!-- BUTTON COUNT -->\r\n    <div *ngIf=\"showCount && shareCount\" class=\"sb-count\">\r\n      <span>{{ shareCount | shareCount }}</span>\r\n    </div>\r\n\r\n  </div>\r\n</button>\r\n`,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  preserveWhitespaces: false\r\n})\r\nexport class ShareButtonComponent {\r\n\r\n  /** Share URL */\r\n  url: string;\r\n\r\n  /** Share count value */\r\n  shareCount: number;\r\n\r\n  /** Button name */\r\n  button: string;\r\n\r\n  @Input('button')\r\n  set createButton(button: string) {\r\n    this.shareCount = 0;\r\n    this.button = button;\r\n  }\r\n\r\n  /** Share URL */\r\n  @Input('url')\r\n  set setUrl(url: string) {\r\n    this.shareCount = 0;\r\n    this.url = url;\r\n  }\r\n\r\n  /** Share meta tags */\r\n  @Input() title: string;\r\n  @Input() description: string;\r\n  @Input() image: string;\r\n  @Input() tags: string;\r\n\r\n  /** Set meta tags from document head, useful when SEO is supported */\r\n  @Input() autoSetMeta: boolean;\r\n\r\n  /** Show button icon */\r\n  @Input() showIcon = true;\r\n\r\n  /** Show button text */\r\n  @Input() showText = false;\r\n\r\n  /** Button share count */\r\n  @Input() showCount = false;\r\n\r\n  /** Button custom text */\r\n  @Input() text: string;\r\n\r\n  /** Button custom icon */\r\n  @Input() icon: IconProp;\r\n\r\n  /** Button size */\r\n  @Input() size: number = this.share.size;\r\n\r\n  /** Button theme */\r\n  @Input() theme: string = this.share.theme;\r\n\r\n  /** Stream that emits when share count is fetched */\r\n  @Output() count = new EventEmitter<number>();\r\n\r\n  /** Stream that emits when share dialog is opened */\r\n  @Output() opened = new EventEmitter<string>();\r\n\r\n  /** Stream that emits when share dialog is closed */\r\n  @Output() closed = new EventEmitter<string>();\r\n\r\n  /** Set theme as button class */\r\n  @HostBinding('class') get buttonClass() {\r\n    return `sb-button sb-${this.theme}`;\r\n  }\r\n\r\n  /** Get button prop from ShareDirective */\r\n  @ViewChild(ShareButtonDirective) ref: ShareButtonDirective;\r\n\r\n  constructor(private share: ShareButtons) {\r\n  }\r\n\r\n  onCount(count) {\r\n    this.shareCount = count;\r\n    this.count.emit(count);\r\n  }\r\n\r\n}\r\n",
    "import { NgModule, InjectionToken } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ShareModule, ShareButtons, ShareButtonsConfig, CONFIG } from '@ngx-share/core';\r\n\r\nimport { ShareButtonComponent } from './share-button.component';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\n\r\nexport function ShareButtonsFactory(config: ShareButtonsConfig) {\r\n  return new ShareButtons(config);\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ShareButtonComponent\r\n  ],\r\n  imports: [\r\n    ShareModule,\r\n    FontAwesomeModule,\r\n    CommonModule\r\n  ],\r\n  exports: [\r\n    ShareModule,\r\n    FontAwesomeModule,\r\n    ShareButtonComponent\r\n  ]\r\n})\r\nexport class ShareButtonModule {\r\n  static forRoot(config?: ShareButtonsConfig) {\r\n    return {\r\n      ngModule: ShareButtonModule,\r\n      providers: [\r\n        {provide: CONFIG, useValue: config},\r\n        {\r\n          provide: ShareButtons,\r\n          useFactory: ShareButtonsFactory,\r\n          deps: [CONFIG]\r\n        }\r\n      ]\r\n    };\r\n  }\r\n}\r\n"
  ],
  "names": [
    "ShareButtonComponent",
    "share",
    "this",
    "showIcon",
    "showText",
    "showCount",
    "size",
    "theme",
    "count",
    "EventEmitter",
    "opened",
    "closed",
    "Object",
    "defineProperty",
    "prototype",
    "set",
    "button",
    "shareCount",
    "url",
    "get",
    "onCount",
    "emit",
    "ShareButtonsFactory",
    "config",
    "ShareButtons",
    "type",
    "Component",
    "args",
    "selector",
    "template",
    "changeDetection",
    "ChangeDetectionStrategy",
    "OnPush",
    "preserveWhitespaces",
    "createButton",
    "Input",
    "setUrl",
    "title",
    "description",
    "image",
    "tags",
    "autoSetMeta",
    "text",
    "icon",
    "Output",
    "buttonClass",
    "HostBinding",
    "ref",
    "ViewChild",
    "ShareButtonDirective",
    "ShareButtonModule",
    "forRoot",
    "ngModule",
    "providers",
    "provide",
    "CONFIG",
    "useValue",
    "useFactory",
    "deps",
    "NgModule",
    "declarations",
    "imports",
    "ShareModule",
    "FontAwesomeModule",
    "CommonModule",
    "exports"
  ],
  "mappings": "4gBAAA,IAAAA,EAAA,WAkIE,SAAFA,EAAsBC,GAAAC,KAAtBD,MAAsBA,EArCtBC,KAAAC,UAAsB,EAGtBD,KAAAE,UAAsB,EAGtBF,KAAAG,WAAuB,EASvBH,KAAAI,KAA0BJ,KAAKD,MAAMK,KAGrCJ,KAAAK,MAA2BL,KAAKD,MAAMM,MAGtCL,KAAAM,MAAoB,IAAIC,EAAAA,aAGxBP,KAAAQ,OAAqB,IAAID,EAAAA,aAGzBP,KAAAS,OAAqB,IAAIF,EAAAA,oBAjDzBG,OAAAC,eAAMb,EAANc,UAAA,gBAAAC,IAAA,SAAmBC,GACfd,KAAKe,WAAa,EAClBf,KAAKc,OAASA,mCAKlBJ,OAAAC,eAAMb,EAANc,UAAA,UAAAC,IAAA,SAAaG,GACThB,KAAKe,WAAa,EAClBf,KAAKgB,IAAMA,mCA2CfN,OAAAC,eAA4Bb,EAA5Bc,UAAA,eAAAK,IAAA,WACI,MAAO,gBAAgBjB,KAAKK,uCAS9BP,EAAFc,UAAAM,QAAE,SAAQZ,GACNN,KAAKe,WAAaT,EAClBN,KAAKM,MAAMa,KAAKb,MAvIpB,GCOA,SAAAc,EAAoCC,GAClC,OAAO,IAAIC,EAAAA,aAAaD,kBDK1BE,KAACC,EAAAA,UAADC,OACEC,SAAU,eACVC,SAAU,imCAyCVC,gBAAiBC,EAAAA,wBAAwBC,OACzCC,qBAAqB,0CA/CvBR,KAASD,EAAAA,kCA4DTU,eAAAT,KAAGU,EAAAA,MAAHR,MAAS,YAOTS,SAAAX,KAAGU,EAAAA,MAAHR,MAAS,SAOTU,QAAAZ,KAAGU,EAAAA,QACHG,cAAAb,KAAGU,EAAAA,QACHI,QAAAd,KAAGU,EAAAA,QACHK,OAAAf,KAAGU,EAAAA,QAGHM,cAAAhB,KAAGU,EAAAA,QAGHhC,WAAAsB,KAAGU,EAAAA,QAGH/B,WAAAqB,KAAGU,EAAAA,QAGH9B,YAAAoB,KAAGU,EAAAA,QAGHO,OAAAjB,KAAGU,EAAAA,QAGHQ,OAAAlB,KAAGU,EAAAA,QAGH7B,OAAAmB,KAAGU,EAAAA,QAGH5B,QAAAkB,KAAGU,EAAAA,QAGH3B,QAAAiB,KAAGmB,EAAAA,SAGHlC,SAAAe,KAAGmB,EAAAA,SAGHjC,SAAAc,KAAGmB,EAAAA,SAGHC,cAAApB,KAAGqB,EAAAA,YAAHnB,MAAe,WAKfoB,MAAAtB,KAAGuB,EAAAA,UAAHrB,MAAasB,EAAAA,yBCtGb,IAAAC,EAAA,WAAA,SAAAA,YACSA,EAATC,QAAE,SAAe5B,GACb,OACE6B,SAAUF,EACVG,YACGC,QAASC,EAAAA,OAAQC,SAAUjC,IAE1B+B,QAAS9B,EAAAA,aACTiC,WAAYnC,EACZoC,MAAOH,EAAAA,cATjB,kBAfA9B,KAACkC,EAAAA,SAADhC,OACEiC,cACE5D,GAEF6D,SACEC,EAAAA,YACAC,EAAAA,kBACAC,EAAAA,cAEFC,SACEH,EAAAA,YACAC,EAAAA,kBACA/D"
}
