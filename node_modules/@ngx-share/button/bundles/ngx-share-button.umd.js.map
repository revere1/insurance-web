{
  "version": 3,
  "file": "ngx-share-button.umd.js",
  "sources": [
    "ng://@ngx-share/button/out/share-button.module.ts",
    "ng://@ngx-share/button/out/share-button.component.ts"
  ],
  "sourcesContent": [
    "import { NgModule, InjectionToken } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ShareModule, ShareButtons, ShareButtonsConfig, CONFIG } from '@ngx-share/core';\r\n\r\nimport { ShareButtonComponent } from './share-button.component';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\n\r\nexport function ShareButtonsFactory(config: ShareButtonsConfig) {\r\n  return new ShareButtons(config);\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ShareButtonComponent\r\n  ],\r\n  imports: [\r\n    ShareModule,\r\n    FontAwesomeModule,\r\n    CommonModule\r\n  ],\r\n  exports: [\r\n    ShareModule,\r\n    FontAwesomeModule,\r\n    ShareButtonComponent\r\n  ]\r\n})\r\nexport class ShareButtonModule {\r\n  static forRoot(config?: ShareButtonsConfig) {\r\n    return {\r\n      ngModule: ShareButtonModule,\r\n      providers: [\r\n        {provide: CONFIG, useValue: config},\r\n        {\r\n          provide: ShareButtons,\r\n          useFactory: ShareButtonsFactory,\r\n          deps: [CONFIG]\r\n        }\r\n      ]\r\n    };\r\n  }\r\n}\r\n",
    "import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ChangeDetectionStrategy,\r\n  ViewChild,\r\n  HostBinding\r\n} from '@angular/core';\r\n\r\nimport { ShareButtons, ShareButtonDirective } from '@ngx-share/core';\r\nimport { IconProp } from '@fortawesome/fontawesome-svg-core';\r\n\r\n@Component({\r\n  selector: 'share-button',\r\n  template: `<button class=\"sb-wrapper\"\r\n        [shareButton]=\"button\"\r\n        [url]=\"url\"\r\n        [image]=\"image\"\r\n        [title]=\"title\"\r\n        [description]=\"description\"\r\n        [tags]=\"tags\"\r\n        [autoSetMeta]=\"autoSetMeta\"\r\n        [getCount]=\"showCount\"\r\n        (opened)=\"opened.emit($event)\"\r\n        (closed)=\"closed.emit($event)\"\r\n        (count)=\"onCount($event)\"\r\n        [class.sb-show-icon]=\"showIcon\"\r\n        [class.sb-show-text]=\"showText\"\r\n        [class.sb-show-count]=\"showCount && shareCount\"\r\n        [style.fontSize.px]=\"(1 + size/20) * 14\">\r\n\r\n  <div class=\"sb-inner\">\r\n\r\n    <div class=\"sb-content\">\r\n\r\n      <!-- BUTTON ICON -->\r\n      <div *ngIf=\"showIcon && ref.prop\" class=\"sb-icon\">\r\n        <fa-icon [icon]=\"icon || ref.prop.icon\"></fa-icon>\r\n      </div>\r\n\r\n      <!-- BUTTON TEXT -->\r\n      <div *ngIf=\"showText && ref.prop\" class=\"sb-text\">\r\n        {{ text || ref.prop.text }}\r\n      </div>\r\n\r\n    </div>\r\n\r\n    <!-- BUTTON COUNT -->\r\n    <div *ngIf=\"showCount && shareCount\" class=\"sb-count\">\r\n      <span>{{ shareCount | shareCount }}</span>\r\n    </div>\r\n\r\n  </div>\r\n</button>\r\n`,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  preserveWhitespaces: false\r\n})\r\nexport class ShareButtonComponent {\r\n\r\n  /** Share URL */\r\n  url: string;\r\n\r\n  /** Share count value */\r\n  shareCount: number;\r\n\r\n  /** Button name */\r\n  button: string;\r\n\r\n  @Input('button')\r\n  set createButton(button: string) {\r\n    this.shareCount = 0;\r\n    this.button = button;\r\n  }\r\n\r\n  /** Share URL */\r\n  @Input('url')\r\n  set setUrl(url: string) {\r\n    this.shareCount = 0;\r\n    this.url = url;\r\n  }\r\n\r\n  /** Share meta tags */\r\n  @Input() title: string;\r\n  @Input() description: string;\r\n  @Input() image: string;\r\n  @Input() tags: string;\r\n\r\n  /** Set meta tags from document head, useful when SEO is supported */\r\n  @Input() autoSetMeta: boolean;\r\n\r\n  /** Show button icon */\r\n  @Input() showIcon = true;\r\n\r\n  /** Show button text */\r\n  @Input() showText = false;\r\n\r\n  /** Button share count */\r\n  @Input() showCount = false;\r\n\r\n  /** Button custom text */\r\n  @Input() text: string;\r\n\r\n  /** Button custom icon */\r\n  @Input() icon: IconProp;\r\n\r\n  /** Button size */\r\n  @Input() size: number = this.share.size;\r\n\r\n  /** Button theme */\r\n  @Input() theme: string = this.share.theme;\r\n\r\n  /** Stream that emits when share count is fetched */\r\n  @Output() count = new EventEmitter<number>();\r\n\r\n  /** Stream that emits when share dialog is opened */\r\n  @Output() opened = new EventEmitter<string>();\r\n\r\n  /** Stream that emits when share dialog is closed */\r\n  @Output() closed = new EventEmitter<string>();\r\n\r\n  /** Set theme as button class */\r\n  @HostBinding('class') get buttonClass() {\r\n    return `sb-button sb-${this.theme}`;\r\n  }\r\n\r\n  /** Get button prop from ShareDirective */\r\n  @ViewChild(ShareButtonDirective) ref: ShareButtonDirective;\r\n\r\n  constructor(private share: ShareButtons) {\r\n  }\r\n\r\n  onCount(count) {\r\n    this.shareCount = count;\r\n    this.count.emit(count);\r\n  }\r\n\r\n}\r\n"
  ],
  "names": [
    "FontAwesomeModule",
    "ShareModule",
    "CommonModule",
    "NgModule",
    "CONFIG",
    "ShareButtons",
    "ViewChild",
    "ShareButtonDirective",
    "HostBinding",
    "Output",
    "Input",
    "ChangeDetectionStrategy",
    "Component",
    "EventEmitter"
  ],
  "mappings": ";;;;;;ACAA,IAAA,oBAAA,IAAA,YAAA;IAkIE,SAAF,oBAAA,CAAsB,KAAmB,EAAzC;QAAsB,IAAtB,CAAA,KAA2B,GAAL,KAAK,CAAc;QArCzC,IAAA,CAAA,QAAA,GAAsB,IAAI,CAA1B;QAGA,IAAA,CAAA,QAAA,GAAsB,KAAK,CAA3B;QAGA,IAAA,CAAA,SAAA,GAAuB,KAAK,CAA5B;QASA,IAAA,CAAA,IAAA,GAA0B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAzC;QAGA,IAAA,CAAA,KAAA,GAA2B,IAAI,CAAC,KAAK,CAAC,KAAK,CAA3C;QAGA,IAAA,CAAA,KAAA,GAAoB,IAAIa,iBAAY,EAAU,CAA9C;QAGA,IAAA,CAAA,MAAA,GAAqB,IAAIA,iBAAY,EAAU,CAA/C;QAGA,IAAA,CAAA,MAAA,GAAqB,IAAIA,iBAAY,EAAU,CAA/C;KAWG;IA5DH,MAAA,CAAA,cAAA,CAAM,oBAAN,CAAA,SAAA,EAAA,cAAkB,EAAlB;QAAA,GAAA,EAAA,UAAmB,MAAc,EAAjC;YACI,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;YACpB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;;;;;IAKzB,MAAA,CAAA,cAAA,CAAM,oBAAN,CAAA,SAAA,EAAA,QAAY,EAAZ;QAAA,GAAA,EAAA,UAAa,GAAW,EAAxB;YACI,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;YACpB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;;;;;IA2CnB,MAAA,CAAA,cAAA,CAA4B,oBAA5B,CAAA,SAAA,EAAA,aAAuC,EAAvC;QAAA,GAAA,EAAA,YAAA;YACI,OAAO,eAAX,GAA2B,IAAI,CAAC,KAAO,CAAC;;;;;IAStC,oBAAF,CAAA,SAAA,CAAA,OAAS,GAAP,UAAQ,KAAK,EAAf;QACI,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KACxB,CAAH;;;;IA3HA,EAAA,IAAA,EAACD,cAAS,EAAV,IAAA,EAAA,CAAW;gBACT,QAAQ,EAAE,cAAc;gBACxB,QAAQ,EAAE,goCAwCX;gBACC,eAAe,EAAED,4BAAuB,CAAC,MAAM;gBAC/C,mBAAmB,EAAE,KAAK;aAC3B,EAAD,EAAA;;;IAhDA,EAAA,IAAA,EAASN,mBAAY,GAArB;;;IA4DA,cAAA,EAAA,CAAA,EAAA,IAAA,EAAGK,UAAK,EAAR,IAAA,EAAA,CAAS,QAAQ,EAAjB,EAAA,EAAA;IAOA,QAAA,EAAA,CAAA,EAAA,IAAA,EAAGA,UAAK,EAAR,IAAA,EAAA,CAAS,KAAK,EAAd,EAAA,EAAA;IAOA,OAAA,EAAA,CAAA,EAAA,IAAA,EAAGA,UAAK,EAAR,EAAA;IACA,aAAA,EAAA,CAAA,EAAA,IAAA,EAAGA,UAAK,EAAR,EAAA;IACA,OAAA,EAAA,CAAA,EAAA,IAAA,EAAGA,UAAK,EAAR,EAAA;IACA,MAAA,EAAA,CAAA,EAAA,IAAA,EAAGA,UAAK,EAAR,EAAA;IAGA,aAAA,EAAA,CAAA,EAAA,IAAA,EAAGA,UAAK,EAAR,EAAA;IAGA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAGA,UAAK,EAAR,EAAA;IAGA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAGA,UAAK,EAAR,EAAA;IAGA,WAAA,EAAA,CAAA,EAAA,IAAA,EAAGA,UAAK,EAAR,EAAA;IAGA,MAAA,EAAA,CAAA,EAAA,IAAA,EAAGA,UAAK,EAAR,EAAA;IAGA,MAAA,EAAA,CAAA,EAAA,IAAA,EAAGA,UAAK,EAAR,EAAA;IAGA,MAAA,EAAA,CAAA,EAAA,IAAA,EAAGA,UAAK,EAAR,EAAA;IAGA,OAAA,EAAA,CAAA,EAAA,IAAA,EAAGA,UAAK,EAAR,EAAA;IAGA,OAAA,EAAA,CAAA,EAAA,IAAA,EAAGD,WAAM,EAAT,EAAA;IAGA,QAAA,EAAA,CAAA,EAAA,IAAA,EAAGA,WAAM,EAAT,EAAA;IAGA,QAAA,EAAA,CAAA,EAAA,IAAA,EAAGA,WAAM,EAAT,EAAA;IAGA,aAAA,EAAA,CAAA,EAAA,IAAA,EAAGD,gBAAW,EAAd,IAAA,EAAA,CAAe,OAAO,EAAtB,EAAA,EAAA;IAKA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAGF,cAAS,EAAZ,IAAA,EAAA,CAAaC,2BAAoB,EAAjC,EAAA,EAAA;;ADzHA,SAAA,mBAAA,CAAoC,MAA0B,EAA9D;IACE,OAAO,IAAIF,mBAAY,CAAC,MAAM,CAAC,CAAC;CACjC;AAiBD,IAAA,iBAAA,IAAA,YAAA;IAAA,SAAA,iBAAA,GAAA;;IACS,iBAAT,CAAA,OAAgB,GAAd,UAAe,MAA2B,EAA5C;QACI,OAAO;YACL,QAAQ,EAAE,iBAAiB;YAC3B,SAAS,EAAE;gBACT,EAAC,OAAO,EAAED,aAAM,EAAE,QAAQ,EAAE,MAAM,EAAC;gBACnC;oBACE,OAAO,EAAEC,mBAAY;oBACrB,UAAU,EAAE,mBAAmB;oBAC/B,IAAI,EAAE,CAACD,aAAM,CAAC;iBACf;aACF;SACF,CAAC;KACH,CAAH;;;;IA5BA,EAAA,IAAA,EAACD,aAAQ,EAAT,IAAA,EAAA,CAAU;gBACR,YAAY,EAAE;oBACZ,oBAAoB;iBACrB;gBACD,OAAO,EAAE;oBACPF,kBAAW;oBACXD,oCAAiB;oBACjBE,mBAAY;iBACb;gBACD,OAAO,EAAE;oBACPD,kBAAW;oBACXD,oCAAiB;oBACjB,oBAAoB;iBACrB;aACF,EAAD,EAAA;;;;;;;;;;;;;;;;"
}
