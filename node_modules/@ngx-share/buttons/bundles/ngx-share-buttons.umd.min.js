!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@ngx-share/core"),require("rxjs/BehaviorSubject"),require("rxjs/operators/map"),require("@fortawesome/free-solid-svg-icons"),require("@angular/common"),require("@ngx-share/button")):"function"==typeof define&&define.amd?define("@ngx-share/buttons",["exports","@angular/core","@ngx-share/core","rxjs/BehaviorSubject","rxjs/operators/map","@fortawesome/free-solid-svg-icons","@angular/common","@ngx-share/button"],t):t((e["ngx-share"]=e["ngx-share"]||{},e["ngx-share"].buttons={}),e.ng.core,e.core$1,e.Rx,e.Rx.Observable.prototype,e.freeSolidSvgIcons,e.ng.common,e.button)}(this,function(e,t,n,o,s,r,u,i){"use strict";var a=function(){function e(e){this.share=e,this.stateWorker$=new o.BehaviorSubject({includedButtons:[],excludedButtons:[],userButtons:[],selectedButtons:[],expanded:!0,shownCount:Object.keys(this.share.config.prop).length}),this.theme=this.share.theme,this.showIcon=!0,this.showText=!1,this.showCount=!1,this.size=0,this.count=new t.EventEmitter,this.opened=new t.EventEmitter,this.closed=new t.EventEmitter}return Object.defineProperty(e.prototype,"includedButtons",{set:function(e){this.updateState({includedButtons:e})},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"excludedButtons",{set:function(e){this.updateState({excludedButtons:e})},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"shownButtons",{set:function(e){this.updateState({shownCount:e})},enumerable:!0,configurable:!0}),e.prototype.ngOnInit=function(){var e=this;this.state$=this.stateWorker$.pipe(s.map(function(e){var t=(e.includedButtons.length?e.includedButtons:e.userButtons).filter(function(t){return e.excludedButtons.indexOf(t)<0});return{userButtons:t,selectedButtons:t.slice(0,e.expanded?t.length:e.shownCount),expanded:e.expanded,shownCount:e.shownCount}})),this.configSub$=this.share.config$.subscribe(function(t){var n=(t.options.include.length?t.options.include:Object.keys(t.prop)).filter(function(e){return t.options.exclude.indexOf(e)<0});e.updateState({userButtons:n,expanded:!1})})},e.prototype.updateState=function(e){this.stateWorker$.next(Object.assign({},this.stateWorker$.getValue(),e))},e.prototype.ngOnDestroy=function(){this.configSub$&&this.configSub$.unsubscribe()},e}();a.decorators=[{type:t.Component,args:[{selector:"share-buttons",template:'<div *ngIf="state$ | async; let state" class="sb-group sb-{{theme}}">\n  <share-button *ngFor="let button of state.selectedButtons"\n                [button]="button"\n                [theme]="theme"\n                [url]="url"\n                [title]="title"\n                [description]="description"\n                [image]="image"\n                [tags]="tags"\n                [autoSetMeta]="autoSetMeta"\n                [showCount]="showCount"\n                [showIcon]="showIcon"\n                [showText]="showText"\n                [size]="size"\n                (opened)="opened.emit($event)"\n                (closed)="closed.emit($event)"\n                (count)="count.emit($event)"></share-button>\n  <div class="sb-button sb-{{theme}}">\n    <expand-button *ngIf="state.shownCount < state.userButtons.length"\n                   [expanded]="state.expanded"\n                   [size]="(1 + size/20) * 14"\n                   (toggle)="updateState({expanded: $event})">\n    </expand-button>\n  </div>\n</div>\n',changeDetection:t.ChangeDetectionStrategy.OnPush,preserveWhitespaces:!1}]}],a.ctorParameters=function(){return[{type:n.ShareButtons}]},a.propDecorators={theme:[{type:t.Input}],includedButtons:[{type:t.Input,args:["include"]}],excludedButtons:[{type:t.Input,args:["exclude"]}],shownButtons:[{type:t.Input,args:["show"]}],url:[{type:t.Input}],title:[{type:t.Input}],description:[{type:t.Input}],image:[{type:t.Input}],tags:[{type:t.Input}],autoSetMeta:[{type:t.Input}],showIcon:[{type:t.Input}],showText:[{type:t.Input}],showCount:[{type:t.Input}],size:[{type:t.Input}],count:[{type:t.Output}],opened:[{type:t.Output}],closed:[{type:t.Output}]};var p=function(){return function(e){this.icon={"true":r.faMinus,"false":r.faEllipsisH},this.toggle=new t.EventEmitter,e.nativeElement.style.setProperty("--button-color","#FF6651")}}();function c(e){return new n.ShareButtons(e)}p.decorators=[{type:t.Component,args:[{selector:"expand-button",template:'\n    <button class="sb-wrapper sb-expand sb-show-icon"\n            [style.fontSize.px]="size"\n            (click)="toggle.emit(!expanded)">\n      <div class="sb-inner">\n        <div class="sb-content">\n          <div class="sb-icon">\n            <fa-icon [icon]="icon[expanded]"></fa-icon>\n          </div>\n        </div>\n      </div>\n    </button>\n  ',changeDetection:t.ChangeDetectionStrategy.OnPush,preserveWhitespaces:!1}]}],p.ctorParameters=function(){return[{type:t.ElementRef}]},p.propDecorators={expanded:[{type:t.Input}],size:[{type:t.Input}],toggle:[{type:t.Output}]};var d=function(){function e(){}return e.forRoot=function(t){return{ngModule:e,providers:[{provide:n.CONFIG,useValue:t},{provide:n.ShareButtons,useFactory:c,deps:[n.CONFIG]}]}},e}();d.decorators=[{type:t.NgModule,args:[{declarations:[a,p],imports:[i.ShareButtonModule,u.CommonModule],exports:[i.ShareButtonModule,a]}]}],d.ctorParameters=function(){return[]},e.ShareButtonsFactory=c,e.ShareButtonsModule=d,e.ShareButtonsComponent=a,e.Éµa=p,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=ngx-share-buttons.umd.min.js.map
