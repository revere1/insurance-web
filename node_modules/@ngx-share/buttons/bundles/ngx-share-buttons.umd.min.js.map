{
  "version": 3,
  "file": "ngx-share-buttons.umd.min.js",
  "sources": [
    "ng://@ngx-share/buttons/out/share-buttons.component.ts",
    "ng://@ngx-share/buttons/out/expand-button.component.ts",
    "ng://@ngx-share/buttons/out/share-buttons.module.ts"
  ],
  "sourcesContent": [
    "import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ChangeDetectionStrategy,\r\n  OnInit,\r\n  OnDestroy\r\n} from '@angular/core';\r\nimport { ShareButtons, ShareButtonsConfig } from '@ngx-share/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\r\nimport { map } from 'rxjs/operators/map';\r\n\r\nexport interface ButtonsState {\r\n  includedButtons?: string[];\r\n  excludedButtons?: string[];\r\n  userButtons?: string[];\r\n  selectedButtons?: string[];\r\n  expanded?: boolean;\r\n  shownCount?: number;\r\n}\r\n\r\n@Component({\r\n  selector: 'share-buttons',\r\n  template: `<div *ngIf=\"state$ | async; let state\" class=\"sb-group sb-{{theme}}\">\r\n\r\n  <share-button *ngFor=\"let button of state.selectedButtons\"\r\n                [button]=\"button\"\r\n                [theme]=\"theme\"\r\n                [url]=\"url\"\r\n                [title]=\"title\"\r\n                [description]=\"description\"\r\n                [image]=\"image\"\r\n                [tags]=\"tags\"\r\n                [autoSetMeta]=\"autoSetMeta\"\r\n                [showCount]=\"showCount\"\r\n                [showIcon]=\"showIcon\"\r\n                [showText]=\"showText\"\r\n                [size]=\"size\"\r\n                (opened)=\"opened.emit($event)\"\r\n                (closed)=\"closed.emit($event)\"\r\n                (count)=\"count.emit($event)\"></share-button>\r\n\r\n  <div class=\"sb-button sb-{{theme}}\">\r\n\r\n    <expand-button *ngIf=\"state.shownCount < state.userButtons.length\"\r\n                   [expanded]=\"state.expanded\"\r\n                   [size]=\"(1 + size/20) * 14\"\r\n                   (toggle)=\"updateState({expanded: $event})\">\r\n    </expand-button>\r\n\r\n  </div>\r\n</div>\r\n`,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  preserveWhitespaces: false\r\n})\r\nexport class ShareButtonsComponent implements OnInit, OnDestroy {\r\n\r\n  configSub$: Subscription;\r\n  state$: Observable<ButtonsState>;\r\n  stateWorker$ = new BehaviorSubject<ButtonsState>({\r\n    includedButtons: [],\r\n    excludedButtons: [],\r\n    userButtons: [],\r\n    selectedButtons: [],\r\n    expanded: true,\r\n    shownCount: Object.keys(this.share.config.prop).length\r\n  });\r\n\r\n  @Input() theme = this.share.theme;\r\n\r\n  @Input('include') set includedButtons(includedButtons: string[]) {\r\n    this.updateState({includedButtons});\r\n  }\r\n\r\n  @Input('exclude') set excludedButtons(excludedButtons: string[]) {\r\n    this.updateState({excludedButtons});\r\n  }\r\n\r\n  @Input('show') set shownButtons(shownCount: number) {\r\n    this.updateState({shownCount});\r\n  }\r\n\r\n  /** Share meta tags */\r\n  @Input() url: string;\r\n  @Input() title: string;\r\n  @Input() description: string;\r\n  @Input() image: string;\r\n  @Input() tags: string;\r\n\r\n  /** Set meta tags from document head, useful when SEO is supported */\r\n  @Input() autoSetMeta: boolean;\r\n\r\n  /** Show buttons icon */\r\n  @Input() showIcon = true;\r\n\r\n  /** Show buttons name */\r\n  @Input() showText = false;\r\n\r\n  /** Show buttons share count */\r\n  @Input() showCount = false;\r\n\r\n  /** Buttons size */\r\n  @Input() size = 0;\r\n\r\n  /** Share count event */\r\n  @Output() count = new EventEmitter<number>();\r\n\r\n  /** Share dialog opened event */\r\n  @Output() opened = new EventEmitter<string>();\r\n\r\n  /** Share dialog closed event */\r\n  @Output() closed = new EventEmitter<string>();\r\n\r\n  constructor(public share: ShareButtons) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.state$ = this.stateWorker$.pipe(\r\n      map((state: ButtonsState) => {\r\n        // Use component include buttons, otherwise fallback to global include buttons\r\n        const includedButtons = state.includedButtons.length ? state.includedButtons : state.userButtons;\r\n        const userButtons = includedButtons.filter((btn) => state.excludedButtons.indexOf(btn) < 0);\r\n        const selectedButtons = userButtons.slice(0, state.expanded ? userButtons.length : state.shownCount);\r\n        return {\r\n          userButtons,\r\n          selectedButtons,\r\n          expanded: state.expanded,\r\n          shownCount: state.shownCount\r\n        };\r\n      })\r\n    );\r\n\r\n    /** Subscribe to share buttons config changes, This updates the component whenever a new button is added */\r\n    this.configSub$ = this.share.config$.subscribe((config: ShareButtonsConfig) => {\r\n      // Use global include buttons, otherwise fallback to all buttons\r\n      const includedButtons = config.options.include.length ? config.options.include : Object.keys(config.prop);\r\n      const userButtons = includedButtons.filter((btn) => config.options.exclude.indexOf(btn) < 0);\r\n      this.updateState({\r\n        userButtons,\r\n        expanded: false\r\n      });\r\n    });\r\n  }\r\n\r\n  updateState(state: ButtonsState) {\r\n    this.stateWorker$.next({...this.stateWorker$.getValue(), ...state});\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.configSub$) {\r\n      this.configSub$.unsubscribe();\r\n    }\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * Explanation of the above code:\r\n * ------------------------------\r\n Include buttons: includes only wanted buttons and excludes the rest\r\n Exclude buttons: excludes only the unwanted buttons\r\n User buttons = Include buttons - exclude buttons\r\n Selected Buttons = User buttons [shown number]\r\n\r\n =====================================================================================\r\n\r\n Why do we use both include and exclude inputs?\r\n\r\n Because it is easier for users who want to disable one button to use [exclude] input instead of writing an array of all included buttons\r\n And it is easier for users who want to enable only one button to use [include] input instead of writing an array of all excluded buttons\r\n */\r\n",
    "import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, Output } from '@angular/core';\r\nimport { faEllipsisH, faMinus } from '@fortawesome/free-solid-svg-icons';\r\n\r\n@Component({\r\n  selector: 'expand-button',\r\n  template: `\r\n    <button class=\"sb-wrapper sb-expand sb-show-icon\"\r\n            [style.fontSize.px]=\"size\"\r\n            (click)=\"toggle.emit(!expanded)\">\r\n\r\n      <div class=\"sb-inner\">\r\n        <div class=\"sb-content\">\r\n          <div class=\"sb-icon\">\r\n            <fa-icon [icon]=\"icon[expanded]\"></fa-icon>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </button>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  preserveWhitespaces: false\r\n})\r\nexport class ExpandButtonComponent {\r\n\r\n  icon: any = {\r\n    true: faMinus,\r\n    false: faEllipsisH\r\n  };\r\n  @Input() expanded: string;\r\n  @Input() size: number;\r\n  @Output() toggle = new EventEmitter();\r\n\r\n  constructor(el: ElementRef) {\r\n    el.nativeElement.style.setProperty('--button-color', '#FF6651');\r\n  }\r\n}\r\n",
    "import { NgModule, InjectionToken } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ShareButtons, ShareButtonsConfig, CONFIG } from '@ngx-share/core';\r\nimport { ShareButtonModule } from '@ngx-share/button';\r\n\r\nimport { ShareButtonsComponent } from './share-buttons.component';\r\nimport { ExpandButtonComponent } from './expand-button.component';\r\n\r\nexport function ShareButtonsFactory(config: ShareButtonsConfig) {\r\n  return new ShareButtons(config);\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ShareButtonsComponent,\r\n    ExpandButtonComponent\r\n  ],\r\n  imports: [\r\n    ShareButtonModule,\r\n    CommonModule\r\n  ],\r\n  exports: [\r\n    ShareButtonModule,\r\n    ShareButtonsComponent\r\n  ]\r\n})\r\nexport class ShareButtonsModule {\r\n  static forRoot(config?: ShareButtonsConfig) {\r\n    return {\r\n      ngModule: ShareButtonsModule,\r\n      providers: [\r\n        {provide: CONFIG, useValue: config},\r\n        {\r\n          provide: ShareButtons,\r\n          useFactory: ShareButtonsFactory,\r\n          deps: [CONFIG]\r\n        }\r\n      ]\r\n    };\r\n  }\r\n}\r\n"
  ],
  "names": [
    "ShareButtonsComponent",
    "share",
    "this",
    "stateWorker$",
    "BehaviorSubject",
    "includedButtons",
    "excludedButtons",
    "userButtons",
    "selectedButtons",
    "expanded",
    "shownCount",
    "Object",
    "keys",
    "config",
    "prop",
    "length",
    "theme",
    "showIcon",
    "showText",
    "showCount",
    "size",
    "count",
    "EventEmitter",
    "opened",
    "closed",
    "defineProperty",
    "prototype",
    "set",
    "updateState",
    "ngOnInit",
    "_this",
    "state$",
    "pipe",
    "map",
    "state",
    "filter",
    "btn",
    "indexOf",
    "slice",
    "configSub$",
    "config$",
    "subscribe",
    "options",
    "include",
    "exclude",
    "next",
    "assign",
    "getValue",
    "ngOnDestroy",
    "unsubscribe",
    "type",
    "Component",
    "args",
    "selector",
    "template",
    "changeDetection",
    "ChangeDetectionStrategy",
    "OnPush",
    "preserveWhitespaces",
    "ShareButtons",
    "Input",
    "shownButtons",
    "url",
    "title",
    "description",
    "image",
    "tags",
    "autoSetMeta",
    "Output",
    "ExpandButtonComponent",
    "el",
    "icon",
    "true",
    "faMinus",
    "false",
    "faEllipsisH",
    "toggle",
    "nativeElement",
    "style",
    "setProperty",
    "ShareButtonsFactory",
    "ElementRef",
    "ShareButtonsModule",
    "forRoot",
    "ngModule",
    "providers",
    "provide",
    "CONFIG",
    "useValue",
    "useFactory",
    "deps",
    "NgModule",
    "declarations",
    "imports",
    "ShareButtonModule",
    "CommonModule",
    "exports"
  ],
  "mappings": "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"
}
