{
  "version": 3,
  "file": "ngx-share-buttons.js",
  "sources": [
    "ng://@ngx-share/buttons/out/share-buttons.module.ts",
    "ng://@ngx-share/buttons/out/expand-button.component.ts",
    "ng://@ngx-share/buttons/out/share-buttons.component.ts"
  ],
  "sourcesContent": [
    "import { NgModule, InjectionToken } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ShareButtons, ShareButtonsConfig, CONFIG } from '@ngx-share/core';\r\nimport { ShareButtonModule } from '@ngx-share/button';\r\n\r\nimport { ShareButtonsComponent } from './share-buttons.component';\r\nimport { ExpandButtonComponent } from './expand-button.component';\r\n\r\nexport function ShareButtonsFactory(config: ShareButtonsConfig) {\r\n  return new ShareButtons(config);\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ShareButtonsComponent,\r\n    ExpandButtonComponent\r\n  ],\r\n  imports: [\r\n    ShareButtonModule,\r\n    CommonModule\r\n  ],\r\n  exports: [\r\n    ShareButtonModule,\r\n    ShareButtonsComponent\r\n  ]\r\n})\r\nexport class ShareButtonsModule {\r\n  static forRoot(config?: ShareButtonsConfig) {\r\n    return {\r\n      ngModule: ShareButtonsModule,\r\n      providers: [\r\n        {provide: CONFIG, useValue: config},\r\n        {\r\n          provide: ShareButtons,\r\n          useFactory: ShareButtonsFactory,\r\n          deps: [CONFIG]\r\n        }\r\n      ]\r\n    };\r\n  }\r\n}\r\n",
    "import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, Output } from '@angular/core';\r\nimport { faEllipsisH, faMinus } from '@fortawesome/free-solid-svg-icons';\r\n\r\n@Component({\r\n  selector: 'expand-button',\r\n  template: `\r\n    <button class=\"sb-wrapper sb-expand sb-show-icon\"\r\n            [style.fontSize.px]=\"size\"\r\n            (click)=\"toggle.emit(!expanded)\">\r\n\r\n      <div class=\"sb-inner\">\r\n        <div class=\"sb-content\">\r\n          <div class=\"sb-icon\">\r\n            <fa-icon [icon]=\"icon[expanded]\"></fa-icon>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </button>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  preserveWhitespaces: false\r\n})\r\nexport class ExpandButtonComponent {\r\n\r\n  icon: any = {\r\n    true: faMinus,\r\n    false: faEllipsisH\r\n  };\r\n  @Input() expanded: string;\r\n  @Input() size: number;\r\n  @Output() toggle = new EventEmitter();\r\n\r\n  constructor(el: ElementRef) {\r\n    el.nativeElement.style.setProperty('--button-color', '#FF6651');\r\n  }\r\n}\r\n",
    "import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ChangeDetectionStrategy,\r\n  OnInit,\r\n  OnDestroy\r\n} from '@angular/core';\r\nimport { ShareButtons, ShareButtonsConfig } from '@ngx-share/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\r\nimport { map } from 'rxjs/operators/map';\r\n\r\nexport interface ButtonsState {\r\n  includedButtons?: string[];\r\n  excludedButtons?: string[];\r\n  userButtons?: string[];\r\n  selectedButtons?: string[];\r\n  expanded?: boolean;\r\n  shownCount?: number;\r\n}\r\n\r\n@Component({\r\n  selector: 'share-buttons',\r\n  template: `<div *ngIf=\"state$ | async; let state\" class=\"sb-group sb-{{theme}}\">\r\n\r\n  <share-button *ngFor=\"let button of state.selectedButtons\"\r\n                [button]=\"button\"\r\n                [theme]=\"theme\"\r\n                [url]=\"url\"\r\n                [title]=\"title\"\r\n                [description]=\"description\"\r\n                [image]=\"image\"\r\n                [tags]=\"tags\"\r\n                [autoSetMeta]=\"autoSetMeta\"\r\n                [showCount]=\"showCount\"\r\n                [showIcon]=\"showIcon\"\r\n                [showText]=\"showText\"\r\n                [size]=\"size\"\r\n                (opened)=\"opened.emit($event)\"\r\n                (closed)=\"closed.emit($event)\"\r\n                (count)=\"count.emit($event)\"></share-button>\r\n\r\n  <div class=\"sb-button sb-{{theme}}\">\r\n\r\n    <expand-button *ngIf=\"state.shownCount < state.userButtons.length\"\r\n                   [expanded]=\"state.expanded\"\r\n                   [size]=\"(1 + size/20) * 14\"\r\n                   (toggle)=\"updateState({expanded: $event})\">\r\n    </expand-button>\r\n\r\n  </div>\r\n</div>\r\n`,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  preserveWhitespaces: false\r\n})\r\nexport class ShareButtonsComponent implements OnInit, OnDestroy {\r\n\r\n  configSub$: Subscription;\r\n  state$: Observable<ButtonsState>;\r\n  stateWorker$ = new BehaviorSubject<ButtonsState>({\r\n    includedButtons: [],\r\n    excludedButtons: [],\r\n    userButtons: [],\r\n    selectedButtons: [],\r\n    expanded: true,\r\n    shownCount: Object.keys(this.share.config.prop).length\r\n  });\r\n\r\n  @Input() theme = this.share.theme;\r\n\r\n  @Input('include') set includedButtons(includedButtons: string[]) {\r\n    this.updateState({includedButtons});\r\n  }\r\n\r\n  @Input('exclude') set excludedButtons(excludedButtons: string[]) {\r\n    this.updateState({excludedButtons});\r\n  }\r\n\r\n  @Input('show') set shownButtons(shownCount: number) {\r\n    this.updateState({shownCount});\r\n  }\r\n\r\n  /** Share meta tags */\r\n  @Input() url: string;\r\n  @Input() title: string;\r\n  @Input() description: string;\r\n  @Input() image: string;\r\n  @Input() tags: string;\r\n\r\n  /** Set meta tags from document head, useful when SEO is supported */\r\n  @Input() autoSetMeta: boolean;\r\n\r\n  /** Show buttons icon */\r\n  @Input() showIcon = true;\r\n\r\n  /** Show buttons name */\r\n  @Input() showText = false;\r\n\r\n  /** Show buttons share count */\r\n  @Input() showCount = false;\r\n\r\n  /** Buttons size */\r\n  @Input() size = 0;\r\n\r\n  /** Share count event */\r\n  @Output() count = new EventEmitter<number>();\r\n\r\n  /** Share dialog opened event */\r\n  @Output() opened = new EventEmitter<string>();\r\n\r\n  /** Share dialog closed event */\r\n  @Output() closed = new EventEmitter<string>();\r\n\r\n  constructor(public share: ShareButtons) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.state$ = this.stateWorker$.pipe(\r\n      map((state: ButtonsState) => {\r\n        // Use component include buttons, otherwise fallback to global include buttons\r\n        const includedButtons = state.includedButtons.length ? state.includedButtons : state.userButtons;\r\n        const userButtons = includedButtons.filter((btn) => state.excludedButtons.indexOf(btn) < 0);\r\n        const selectedButtons = userButtons.slice(0, state.expanded ? userButtons.length : state.shownCount);\r\n        return {\r\n          userButtons,\r\n          selectedButtons,\r\n          expanded: state.expanded,\r\n          shownCount: state.shownCount\r\n        };\r\n      })\r\n    );\r\n\r\n    /** Subscribe to share buttons config changes, This updates the component whenever a new button is added */\r\n    this.configSub$ = this.share.config$.subscribe((config: ShareButtonsConfig) => {\r\n      // Use global include buttons, otherwise fallback to all buttons\r\n      const includedButtons = config.options.include.length ? config.options.include : Object.keys(config.prop);\r\n      const userButtons = includedButtons.filter((btn) => config.options.exclude.indexOf(btn) < 0);\r\n      this.updateState({\r\n        userButtons,\r\n        expanded: false\r\n      });\r\n    });\r\n  }\r\n\r\n  updateState(state: ButtonsState) {\r\n    this.stateWorker$.next({...this.stateWorker$.getValue(), ...state});\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.configSub$) {\r\n      this.configSub$.unsubscribe();\r\n    }\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * Explanation of the above code:\r\n * ------------------------------\r\n Include buttons: includes only wanted buttons and excludes the rest\r\n Exclude buttons: excludes only the unwanted buttons\r\n User buttons = Include buttons - exclude buttons\r\n Selected Buttons = User buttons [shown number]\r\n\r\n =====================================================================================\r\n\r\n Why do we use both include and exclude inputs?\r\n\r\n Because it is easier for users who want to disable one button to use [exclude] input instead of writing an array of all included buttons\r\n And it is easier for users who want to enable only one button to use [include] input instead of writing an array of all excluded buttons\r\n */\r\n"
  ],
  "names": [],
  "mappings": "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"
}
